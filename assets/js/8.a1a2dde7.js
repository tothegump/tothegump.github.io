(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{296:function(e,t,n){"use strict";n.r(t);var r=n(4),o=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_2019-03-24"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2019-03-24","aria-hidden":"true"}},[e._v("#")]),e._v(" 2019-03-24")]),e._v(" "),n("p",[n("strong",[e._v("# 1.Algorithm")])]),e._v(" "),n("blockquote",[n("p",[e._v("每周至少做一个 leetcode 的算法题")])]),e._v(" "),n("p",[e._v("又随机到一个 easy，刚好本周时间不多（好熟悉的话术）\n"),n("a",{attrs:{href:"https://leetcode.com/problems/univalued-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("leetcode"),n("OutboundLink")],1),e._v("\n不过下周的是个 hard 难度")]),e._v(" "),n("blockquote",[n("p",[e._v("A binary tree is_univalued_if every node in the tree has the same value."),n("br"),e._v("\nReturntrueif and only if the given tree is univalued.")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n        \n    def isUnivalTree(self, root):\n        """\n        :type root: TreeNode\n        :rtype: bool\n        """\n        if root is None:\n            return True\n        the_value = root.val\n        stack = []\n\n        stack.append(root)\n\n        while(len(stack) > 0):\n            node = stack.pop()\n            if node.val != the_value:\n                return False\n            if node.right:\n                stack.append(node.right)\n            if node.left:\n                stack.append(node.left)\n        return True\n\n')])])]),n("p",[n("strong",[e._v("# 2.Review")])]),e._v(" "),n("blockquote",[n("p",[e._v("阅读并点评至少一篇英文技术文章"),n("br"),e._v(" "),n("a",{attrs:{href:"https://faust.readthedocs.io/en/latest/introduction.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introducing Faust — Faust 1.5.0 documentation"),n("OutboundLink")],1),e._v("\nFaust 相关，其实主要是为了对接 kafka")])]),e._v(" "),n("p",[n("strong",[e._v("# 3.Tip")])]),e._v(" "),n("blockquote",[n("p",[e._v("学习至少一个技术技巧")])]),e._v(" "),n("ul",[n("li",[e._v("[ ] 了解了 Faust 这个库")])]),e._v(" "),n("p",[n("strong",[e._v("# 4.Share")])]),e._v(" "),n("blockquote",[n("p",[e._v("分享一篇有观点和思考的技术文章"),n("br"),e._v("\n本周输出：\n呃。。。没有写完\n先这样吧\nhttp://blog.tothegump.com/chinwag/java_class_loader_1.html")])])])},[],!1,null,null,null);t.default=o.exports}}]);